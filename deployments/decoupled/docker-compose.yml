version: '3'
services:

  # BITCOIN
  node1:
    container_name: arc_node1
    image: bitcoinsv/bitcoin-sv:1.0.15
    ports:
      - "18332:18332"
    expose:
      - "18332"
      - "18333"
      - "28332"
    healthcheck:
      test: [ "CMD", "/entrypoint.sh", "bitcoin-cli", "getinfo" ]
    volumes:
      - arc_node1-data:/data
      - ./bitcoin.conf:/data/bitcoin.conf
    command: [ "/entrypoint.sh", "bitcoind", "-connect=node2:18333", "-connect=node3:18333" ]

  node2:
    container_name: arc_node2
    image: bitcoinsv/bitcoin-sv:1.0.15
    ports:
      - "48332:18332"
    expose:
      - "18332"
      - "18333"
    healthcheck:
      test: [ "CMD", "/entrypoint.sh", "bitcoin-cli", "getinfo" ]
    volumes:
      - arc_node2-data:/data
      - ./bitcoin.conf:/data/bitcoin.conf
    command: [ "/entrypoint.sh", "bitcoind", "-connect=node1:18333", "-connect=node3:18333" ]

  node3:
    container_name: arc_node3
    image: bitcoinsv/bitcoin-sv:1.0.15
    ports:
      - "58332:18332"
    expose:
      - "18332"
      - "18333"
    healthcheck:
      test: [ "CMD", "/entrypoint.sh", "bitcoin-cli", "getinfo" ]
    volumes:
      - arc_node3-data:/data
      - ./bitcoin.conf:/data/bitcoin.conf
    command: [ "/entrypoint.sh", "bitcoind", "-connect=node1:18333", "-connect=node2:18333" ]


  # DB
  db:
    container_name: arc_db
    image: postgres:14
    restart: always
    environment:
    - POSTGRES_USER=arcuser
    - POSTGRES_PASSWORD=arcpass
    - POSTGRES_DB=blocktx
    volumes:
      - arc_db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d blocktx -U arcuser" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    expose:
      - "5432"

  migrate:
    container_name: arc_migrate
    build:
      context: .
      dockerfile: ../Dockerfile.migrate
    entrypoint:
      [ 
        "migrate",
        "-path",
        "/migrations/blocktx/postgres",
        "-database",
        "postgres://arcuser:arcpass@db:5432/blocktx?sslmode=disable",
      ]
    command: [ "up" ]
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy


  # ARC BUILD
  # API
  api:
    build:
      context: .
      dockerfile: ../Dockerfile.arc
    image: arc
    container_name: arc
    ports:
      - "9090:9090"
    command: [ "/service/arc", "-api=true" ]
    volumes:
      - arc_api-data:/data
      - ./config.yaml:/service/config.yaml
    depends_on:
      - migrate

  # METAMORPH
  metamorph:
    image: arc:latest
    command: [ "/service/arc", "-metamorph=true" ]
    container_name: lb-metamorph
    ports:
      - "8001:8001"      
    volumes:
      - arc_metamorph-data:/data
      - ./config.yaml:/service/config.yaml
    depends_on:
      - migrate
      - blocktx

  # BLOCKTX
  blocktx:
    container_name: arc_blocktx
    image: arc:latest
    command: [ "/service/arc", "-blocktx=true" ]      
    ports:
      - "8011:8011"
    volumes:
      - arc_blocktx-data:/data
      - ./config.yaml:/service/config.yaml
    depends_on:
      db:
        condition: service_healthy
      node1:
        condition: service_healthy
      node2:
        condition: service_healthy
      node3:
        condition: service_healthy

  # CALLBACKER
  callbacker:
    container_name: arc_callbacker
    image: arc:latest
    command: [ "/service/arc", "-callbacker=true" ]      
    ports:
      - "8021:8021"
    volumes:
      - ./config.yaml:/service/config.yaml
    depends_on:
      - api
      - metamorph
      - migrate

  # dummy-callback:
  #   build:
  #     context: app_third
  #   image: dummy_callback
  #   container_name: dummy_callback    
  #   ports:
  #     - "9000:3000"


  tests:
    container_name: arc-tests
    build:
      dockerfile: ../Dockerfile.arc.test
      context: .
    depends_on:
      - api

volumes:
  arc_api-data:
    external: false
  arc_metamorph-data:
    external: false    
  arc_blocktx-data:
    external: false    
  arc_node1-data:
    external: false
  arc_node2-data:
    external: false
  arc_node3-data:
    external: false
  arc_db-data:
    external: false
