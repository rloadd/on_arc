version: '3'
services:
  node1:
    container_name: arc_node1
    image: bitcoinsv/bitcoin-sv:1.0.15
    ports:
      - "18332:18332"
    expose:
      - "18332"
      - "18333"
      - "28332"
    healthcheck:
      test: [ "CMD", "/entrypoint.sh", "bitcoin-cli", "getinfo" ]
    volumes:
      - node1-data:/data
      - ./bitcoin.conf:/data/bitcoin.conf
    command: [ "/entrypoint.sh", "bitcoind", "-connect=node2:18333", "-connect=node3:18333" ]

  node2:
    container_name: arc_node2
    image: bitcoinsv/bitcoin-sv:1.0.15
    ports:
      - "48332:18332"
    expose:
      - "18332"
      - "18333"
    healthcheck:
      test: [ "CMD", "/entrypoint.sh", "bitcoin-cli", "getinfo" ]
    volumes:
      - node2-data:/data
      - ./bitcoin.conf:/data/bitcoin.conf
    command: [ "/entrypoint.sh", "bitcoind", "-connect=node1:18333", "-connect=node3:18333" ]

  node3:
    container_name: arc_node3
    image: bitcoinsv/bitcoin-sv:1.0.15
    ports:
      - "58332:18332"
    expose:
      - "18332"
      - "18333"
    healthcheck:
      test: [ "CMD", "/entrypoint.sh", "bitcoin-cli", "getinfo" ]
    volumes:
      - node3-data:/data
      - ./bitcoin.conf:/data/bitcoin.conf
    command: [ "/entrypoint.sh", "bitcoind", "-connect=node1:18333", "-connect=node2:18333" ]

  db:
    container_name: arc_db
    image: postgres:14
    restart: always
    environment:
    - POSTGRES_USER=arcuser
    - POSTGRES_PASSWORD=arcpass
    - POSTGRES_DB=blocktx
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d blocktx -U arcuser" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    expose:
      - "5432"

  migrate:
    container_name: arc-migrate-block
    build:
      context: .
      dockerfile: ../Dockerfile.migrate
    entrypoint:
      [ 
        "migrate",
        "-path",
        "/migrations/blocktx/postgres",
        "-database",
        "postgres://arcuser:arcpass@db:5432/blocktx?sslmode=disable",
      ]
    command: [ "up" ]
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy

  arc:
    build:
      context: .
      dockerfile: ../Dockerfile.arc
    image: arc-image
    container_name: arc
    ports:
      - "8011:8011"
      - "9090:9090"
      - "9999:9999"
    volumes:
      - arc-data:/data
      - ./config.yaml:/service/config.yaml
    depends_on:
      - node1
      - node2
      - node3
      - migrate

  tests:
    container_name: arc-tests
    build:
      dockerfile: ../Dockerfile.arc.test
      context: .
    depends_on:
      - arc


volumes:
  arc-data:
    external: false
  node1-data:
    external: false
  node2-data:
    external: false
  node3-data:
    external: false
  postgres-data:
    external: false
